#colors:
rosewater: &rosewater "#f5e0dc"
flamingo: &flamingo "#f2cdcd"
pink: &pink "#f5c2e7"
mauve: &mauve "#cba6f7"
red: &red "#f38ba8"
maroon: &maroon "#eba0ac"
peach: &peach "#fab387"
yellow: &yellow "#f9e2af"
green: &green "#a6e3a1"
teal: &teal "#94e2d5"
sky: &sky "#89dceb"
sapphire: &sapphire "#74c7ec"
blue: &blue "#89b4fa"
lavender: &lavender "#b4befe"
text: &text "#cdd6f4"
subtext1: &subtext1 "#bac2de"
subtext0: &subtext0 "#a6adc8"
overlay2: &overlay2 "#9399b2"
overlay1: &overlay1 "#7f849c"
overlay0: &overlay0 "#6c7086"
surface2: &surface2 "#585b70"
surface1: &surface1 "#45475a"
surface0: &surface0 "#313244"
base: &base "#1e1e2e"
mantle: &mantle "#181825"
crust: &crust "#11111b"
gruvbox_light: &gruvbox_light "#ebdbb2"
gruvbox_dark: &gruvbox_dark "#282828"
gruvbox_red: &gruvbox_red "#cc241d"
gruvbox_green: &gruvbox_green "#98971a"
gruvbox_yellow: &gruvbox_yellow "#d79921"
gruvbox_orange: &gruvbox_orange "#d65d0e"
gruvbox_blue: &gruvbox_blue "#458588"
gruvbox_purple: &gruvbox_purple "#b16286"
gruvbox_aqua: &gruvbox_aqua "#689d6a"

general:
  # Commands to run when the WM has started. This is useful for running a
  # script or launching another application.
  # Example: The below command launches Zebar.
  startup_commands: ['shell-exec zebar']

  # Commands to run just before the WM is shutdown.
  # Example: The below command kills Zebar.
  shutdown_commands: ['shell-exec taskkill /IM zebar.exe /F']

  # Commands to run after the WM config is reloaded.
  config_reload_commands: []

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'monitor_focus'

  # How windows should be hidden when switching workspaces.
  # - 'cloak': Recommended. Hides windows with no animation.
  # - 'hide': Legacy method (v3.5 and earlier) that has a brief animation,
  # but has stability issues with some apps.
  hide_method: 'cloak'

  # Affects which windows get shown in the native Windows taskbar. Has no
  # effect if `hide_method: 'hide'`.
  # - 'true': Show all windows (regardless of workspace).
  # - 'false': Only show windows from the currently shown workspaces.
  show_all_in_taskbar: true

gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true

  # Gap between adjacent windows.
  inner_gap: '5px'

  # Gap between windows and the screen edge.
  outer_gap:
    top: '50px'
    right: '5px'
    bottom: '5px'
    left: '5px'

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: *gruvbox_light

    # Remove the title bar from the window's frame. Note that this can
    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: false
      # Allowed values: 'square', 'rounded', 'small_rounded'.
      style: 'rounded'

    # Change the transparency of the window.
    transparency:
      enabled: false
      # Can be something like '95%' or '0.95' for slightly transparent windows.
      # '0' or '0%' is fully transparent (and, by consequence, unfocusable).
      opacity: '95%'

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: *gruvbox_dark
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: false
      style: 'square'
    transparency:
      enabled: false
      opacity: '0%'

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'floating'

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: true

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: 'q'
    display_name: "Q"
    bind_to_monitor: 0
  - name: 'w'
    display_name: "W"
    bind_to_monitor: 0
  - name: 'e'
    display_name: "E"
    bind_to_monitor: 0
  - name: 'r'
    display_name: "R"
    bind_to_monitor: 0
  - name: 't'
    display_name: "T"
    bind_to_monitor: 0
  - name: 'a'
    display_name: "A"
    bind_to_monitor: 1
  - name: 's'
    display_name: "S"
    bind_to_monitor: 1
  - name: 'd'
    display_name: "D"
    bind_to_monitor: 1
  - name: 'f'
    display_name: "F"
    bind_to_monitor: 1

window_rules:
  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: '[Pp]icture.in.[Pp]icture' }
        window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }

      # Ignore Arc browser popups.
      - window_title: { regex: 'Arc [Pp]icture in [Pp]icture' }
      - window_title: { regex: 'Arc extension popup' }

      # Ignore Sticky Notes windows based on process name.
      - window_process: { equals: 'Microsoft.Notes' }
      - window_title: { regex: 'Sticky Notes' }
      - window_process: { equals: 'Sticky Notes' }
        window_class: { regex: 'ApplicationFrameWindow' }
      - window_process: { equals: 'StickyNotes.exe' }
        window_class: { regex: 'ApplicationFrameWindow' }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: 'PowerToys' }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: 'PowerToys' }
        window_title: { regex: '.*? - Peek' }
      - window_process: { equals: 'Lively' }
        window_class: { regex: 'HwndWrapper' }

      #Ignore rules for warp terminal
      - window_process: { equals: 'warp' }

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: 'resize'
    keybindings:
      - commands: ['resize --width -2%']
        bindings: ['h', 'left']
      - commands: ['resize --width +2%']
        bindings: ['l', 'right']
      - commands: ['resize --height +2%']
        bindings: ['k', 'up']
      - commands: ['resize --height -2%']
        bindings: ['j', 'down']
      # Press enter/escape to return to default keybindings.
      - commands: ['wm-disable-binding-mode --name resize']
        bindings: ['escape', 'enter']

keybindings:
  # Shift focus in a given direction.
  - commands: ['focus --direction left']
    bindings: ['alt+left']
  - commands: ['focus --direction right']
    bindings: ['alt+right']
  - commands: ['focus --direction up']
    bindings: ['alt+up']
  - commands: ['focus --direction down']
    bindings: ['alt+down']

  # Move focused window in a given direction.
  - commands: ['move --direction left']
    bindings: ['alt+shift+left']
  - commands: ['move --direction right']
    bindings: ['alt+shift+right']
  - commands: ['move --direction up']
    bindings: ['alt+shift+up']
  - commands: ['move --direction down']
    bindings: ['alt+shift+down']

  # Resize focused window by a percentage or pixel amount.
  - commands: ['resize --width -2%']
    bindings: ['alt+u']
  - commands: ['resize --width +2%']
    bindings: ['alt+p']
  - commands: ['resize --height +2%']
    bindings: ['alt+o']
  - commands: ['resize --height -2%']
    bindings: ['alt+i']

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ['wm-enable-binding-mode --name resize']
    bindings: ['alt+l']

  # Disables window management and all other keybindings until alt+shift+p
  # is pressed again.
  - commands: ['wm-toggle-pause']
    bindings: ["alt+'"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ['toggle-tiling-direction']
    bindings: ['alt+z']

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ['wm-cycle-focus']
    bindings: ['alt+c']

  # Change the focused window to be floating.
  - commands: ['toggle-floating --centered']
    bindings: ['alt+shift+c']

  # Change the focused window to be tiling.
  - commands: ['toggle-tiling']
    bindings: ['alt+x']

  # Change the focused window to be fullscreen.
  - commands: ['toggle-fullscreen']
    bindings: ['alt+v']

  # Minimize focused window.
  - commands: ['toggle-minimized']
    bindings: ['alt+m']

  # Close focused window.
  - commands: ['close']
    bindings: ["alt+shift+'"]

  # Kill GlazeWM process safely.
  - commands: ['wm-exit']
    bindings: ['alt+shift+4']

  # Re-evaluate configuration file.
  - commands: ['wm-reload-config']
    bindings: ['alt+shift+3']

  # Redraw all windows.
  - commands: ['wm-redraw']
    bindings: ['alt+shift+2']

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ['shell-exec cmd']
    bindings: ['alt+enter']

  # Focus the next/previous active workspace defined in `workspaces` config.
  # - commands: ['focus --next-active-workspace']
  #   bindings: ['alt+s']
  # - commands: ['focus --prev-active-workspace']
  #   bindings: ['alt+a']

  # Focus the workspace that last had focus.
  # - commands: ['focus --recent-workspace']
  #   bindings: ['alt+d']

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ['focus --workspace q']
    bindings: ['alt+q']
  - commands: ['focus --workspace w']
    bindings: ['alt+w']
  - commands: ['focus --workspace e']
    bindings: ['alt+e']
  - commands: ['focus --workspace r']
    bindings: ['alt+r']
  - commands: ['focus --workspace t']
    bindings: ['alt+t']
  - commands: ['focus --workspace a']
    bindings: ['alt+a']
  - commands: ['focus --workspace s']
    bindings: ['alt+s']
  - commands: ['focus --workspace d']
    bindings: ['alt+d']
  - commands: ['focus --workspace f']
    bindings: ['alt+f']

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  # - commands: ['move-workspace --direction left']
  #   bindings: ['alt+shift+a']
  # - commands: ['move-workspace --direction right']
  #   bindings: ['alt+shift+f']
  # - commands: ['move-workspace --direction up']
  #   bindings: ['alt+shift+d']
  # - commands: ['move-workspace --direction down']
  #   bindings: ['alt+shift+s']

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ['move --workspace q', 'focus --workspace q']
    bindings: ['alt+shift+q']
  - commands: ['move --workspace w', 'focus --workspace w']
    bindings: ['alt+shift+w']
  - commands: ['move --workspace e', 'focus --workspace e']
    bindings: ['alt+shift+e']
  - commands: ['move --workspace r', 'focus --workspace r']
    bindings: ['alt+shift+r']
  - commands: ['move --workspace t', 'focus --workspace t']
    bindings: ['alt+shift+t']
  - commands: ['move --workspace a', 'focus --workspace a']
    bindings: ['alt+shift+a']
  - commands: ['move --workspace s', 'focus --workspace s']
    bindings: ['alt+shift+s']
  - commands: ['move --workspace d', 'focus --workspace d']
    bindings: ['alt+shift+d']
  - commands: ['move --workspace f', 'focus --workspace f']
    bindings: ['alt+shift+f']
